[project]
name = "nemo-agent-toolkit-examples"
version = "0.0.1"
requires-python = ">=3.11,<3.13"
description = "NVIDIA NeMo Agent Toolkit Examples"
dependencies = []

[dependency-groups]
# Dependency groups are only for developers to aid in managing dependencies local to a dev machine.
dev = [
  "ipython~=8.31",
  "pip>=24.3.1",
  "pre-commit>=4.0,<5.0",
  "pytest-asyncio==0.24.*",
  "pytest-cov~=6.1",
  "pytest-pretty~=1.2.0",
  "pytest~=8.3",
  "ruff~=0.12",
  "setuptools >= 64",
  "setuptools_scm>=8",
  "vale==3.9.5",
  "yapf==0.43.*",
]

[tool.ruff]
# Set the maximum line length to 120.
line-length = 120
target-version = "py311"

[tool.ruff.lint]

select = [
  # The E, F, W categories are flake8 rules.
  "E",
  "F",
  "W",
  # Enable isort support
  "I",
  # Enable partial pylint support
  "PL",
]

extend-ignore = [
  "PLC0415", # Allow lazy imports inside functions
  # Disable all the "too-*" checks, as they are too strict for our codebase
  "PLR0904", # too-many-public-methods
  "PLR0911", # too-many-return-statements
  "PLR0912", # too-many-branches
  "PLR0913", # too-many-arguments
  "PLR0914", # too-many-locals
  "PLR0915", # too-many-statements
  "PLR0917", # too-many-positional-arguments
  "PLR1702", # too-many-nested-blocks
  "PLR2004", # Magic value used in comparison this happens a lot within unittests
  "PLW0108", # unnecessary-lambda
  "PLW2901", # allow re-assigning a loop variable
]

[tool.ruff.lint.isort]
combine-as-imports = true
default-section = "third-party"
force-single-line = true
known-first-party = ["aiq", "nat", "nat_*", "_utils"]
known-third-party = [
  "agno",
  "crewai",
  "langchain",
  "llama_index",
  "mem0ai",
  "redis",
  "semantic_kernel",
  "zep_cloud",
]
order-by-type = true

[tool.yapf]
based_on_style = "pep8"
column_limit = 120
split_all_top_level_comma_separated_values = true
join_multiple_lines = true
indent_dictionary_value = true


# ===== pyright Config =====
[tool.pyright]
deprecateTypingAliases = true
reportInvalidTypeForm = "warning"
